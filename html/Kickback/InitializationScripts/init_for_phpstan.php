<?php
declare(strict_types=1);

// -------------------------------------------------------------------------- //
// !!!!!!!!!!!!!!!!!!!!!!!!!! DO NOT EDIT THIS FILE !!!!!!!!!!!!!!!!!!!!!!!!! //
// -------------------------------------------------------------------------- //
//
// This file is should be exactly the same as the
// `Kickback\InitializationScripts\init.php` script,
// just declaring a different PARENT_PROCESS_TYPE variable.
//
// This file may be executed from within an incorrect script root,
// which introduces pitfalls for file inclusion (correct use of `require_once`)
// as well as pitfalls for version control and change management.
// Hence, it is best to just avoid editing this file, unless you must.
//
// As of this writing, the only foreseeable reason to edit this file would
// be if one is redesigning the init system for the entire Kickback namespace.
//
// If you just want to add initialization code, then it should probably
// be included from `Kickback\InitializationScripts\common_init.php`.
// That script will be executed from a more sane context: after changing script root.
//
// In addition to being important for allowing PHPStan to work,
// this file is also an example of how to note that initialization is
// NOT occuring in the ordinary web/cli context.
//
// See `change_root.php` for further explanation for why `init*.php`
// (and change_root.php) should not be edited and should be kept VERY simple.

// Communicate to the other startup scripts that we are running as part of PHPStan.
if (!defined('Kickback\InitializationScripts\PARENT_PROCESS_TYPE')) {
    define('Kickback\InitializationScripts\PARENT_PROCESS_TYPE', "PHPSTAN");
}

// The change_root script will handle initialization from here.
// (It defines SCRIPT_ROOT and then calls the `common_init.php` in the correct SCRIPT_ROOT.)
require_once("change_root.php");

/*
// -------------------------------------------------------------------------- //
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! BEWARE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
// =========== READ COMMENTS IN INIT.PHP BEFORE EDITING THIS FILE =========== //
// -------------------------------------------------------------------------- //
//
// This file is pretty much `init.php`, except that it's intended to be the
// entry point for analyser software, such as PHPStan.
//
// It has the same concerns as `init.php`, at least in terms of the
// possibility that it may be executed from an incorrect SCRIPT_ROOT.
//
// This file is NOT to be executed from a web context.
// For web code, just use `init.php` instead.
// And while running this file by hand from the CLI shouldn't do anything bad,
// it's unlikely that such a thing would be beneficial.
//
// If this file and `init.php` ever end up with a significant amount of
// common code, it might make sense to factor the common bits.
// This file is not separated for any dogmatic reason, it is specifically
// just about having a way to set some globals that wouldn't normally be set,
// and also about executing things that are unnecessary for PHPStan, like
// the composer autoloader. As of this writing, the common code between
// this file and `init.php` is pretty much already factored out into
// `script_root.php` and `autoload_classes.php`, so just requiring those two
// might be enough to make everything work.

// Communicate to the other startup scripts that we are running as part of PHPStan.
if (!defined('Kickback\InitializationScripts\PHPSTAN_CONTEXT')) {
    define('Kickback\InitializationScripts\PHPSTAN_CONTEXT', true);
}

// The bootstrap script will handle initialization from here.
// (It defines SCRIPT_ROOT and then calls the `common_init.php` in the correct SCRIPT_ROOT.)
require_once("bootstrap.php");
*/
/*

// Define some simple debug output and tracing mechanims that can be used
// in the autoloader, and (only!) in any other axiomatic initialization mechanisms.
require_once(\Kickback\SCRIPT_ROOT . "/Kickback/InitializationScripts/debug.php");

// File that declares \Kickback\SCRIPT_ROOT.
// Do this before any other `require_once` statements,
// so that we can use it to locate the correct script files.
require_once("script_root.php");

// Initialize+register the autoloader for \Kickback namespace classes.
require_once(\Kickback\SCRIPT_ROOT . "/Kickback/autoload_classes.php");

// Omission: we do not register Composer's autoloader.
// We are not interested in analysing 3rd party classes.
*/
?>
